#!/bin/bash
# Script de migration depuis la version Bash vers Spring Boot

echo "=== Migration SIOP Bash ‚Üí Spring Boot ==="
echo ""

# Configuration
BASH_DIR="../sendMail"
SPRING_DIR="."
BACKUP_DIR="backup-$(date +%Y%m%d_%H%M%S)"

# V√©rification des pr√©requis
echo "1. V√©rification des pr√©requis..."

# V√©rification de Java
if ! command -v java &> /dev/null; then
    echo "‚ùå Java non install√©"
    echo "   Installez Java 17 ou sup√©rieur"
    exit 1
fi

# V√©rification de Maven
if ! command -v mvn &> /dev/null; then
    echo "‚ùå Maven non install√©"
    echo "   Installez Maven 3.6 ou sup√©rieur"
    exit 1
fi

echo "‚úÖ Pr√©requis satisfaits"
echo ""

# Sauvegarde de l'ancienne configuration
echo "2. Sauvegarde de l'ancienne configuration..."

if [[ -d "$BASH_DIR" ]]; then
    mkdir -p "$BACKUP_DIR"
    cp -r "$BASH_DIR" "$BACKUP_DIR/"
    echo "‚úÖ Configuration Bash sauvegard√©e dans $BACKUP_DIR"
else
    echo "‚ö†Ô∏è  R√©pertoire Bash non trouv√©: $BASH_DIR"
fi
echo ""

# Migration de la configuration
echo "3. Migration de la configuration..."

if [[ -f "$BASH_DIR/config.json" ]]; then
    echo "   Migration de config.json..."
    
    # Extraction des param√®tres Oracle
    ORACLE_URL=$(python3 -c "
import json
with open('$BASH_DIR/config.json', 'r') as f:
    config = json.load(f)
print(config['oracle']['connectionString'])
" 2>/dev/null || echo "")
    
    # Extraction des param√®tres email
    SMTP_HOST=$(python3 -c "
import json
with open('$BASH_DIR/config.json', 'r') as f:
    config = json.load(f)
print(config['email']['smtpServer'])
" 2>/dev/null || echo "")
    
    SMTP_USERNAME=$(python3 -c "
import json
with open('$BASH_DIR/config.json', 'r') as f:
    config = json.load(f)
print(config['email']['username'])
" 2>/dev/null || echo "")
    
    echo "   ‚úÖ Configuration extraite"
    echo "   üìã Param√®tres trouv√©s:"
    echo "      ‚Ä¢ Oracle URL: ${ORACLE_URL:0:50}..."
    echo "      ‚Ä¢ SMTP Host: $SMTP_HOST"
    echo "      ‚Ä¢ SMTP Username: $SMTP_USERNAME"
else
    echo "   ‚ö†Ô∏è  Fichier config.json non trouv√©"
fi
echo ""

# Cr√©ation du fichier .env
echo "4. Cr√©ation du fichier .env..."

cat > .env << EOF
# Configuration migr√©e depuis la version Bash
# Modifiez ces valeurs selon votre environnement

# Configuration Oracle
ORACLE_USERNAME=your-username
ORACLE_PASSWORD=your-password

# Configuration SMTP
SMTP_HOST=$SMTP_HOST
SMTP_USERNAME=$SMTP_USERNAME
SMTP_PASSWORD=your-smtp-password

# Configuration de l'application
SPRING_PROFILES_ACTIVE=prod
JAVA_OPTS=-Xms512m -Xmx1024m

# Configuration du scheduler
SIOP_SCHEDULER_ENABLED=true
SIOP_SCHEDULER_CRON=0 */15 * * * *
EOF

echo "‚úÖ Fichier .env cr√©√©"
echo ""

# D√©sactivation de l'ancien cron
echo "5. D√©sactivation de l'ancien cron..."

if crontab -l 2>/dev/null | grep -q "sendMail\|sendSiopMail"; then
    echo "   Anciennes entr√©es cron trouv√©es:"
    crontab -l | grep "sendMail\|sendSiopMail"
    echo ""
    
    read -p "D√©sactiver l'ancien cron? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        crontab -l 2>/dev/null | grep -v "sendMail\|sendSiopMail" | crontab -
        echo "   ‚úÖ Ancien cron d√©sactiv√©"
    else
        echo "   ‚ö†Ô∏è  Ancien cron conserv√© (d√©sactivez-le manuellement)"
    fi
else
    echo "   ‚úÖ Aucun cron √† d√©sactiver"
fi
echo ""

# Compilation de l'application Spring Boot
echo "6. Compilation de l'application Spring Boot..."

if mvn clean compile; then
    echo "‚úÖ Compilation r√©ussie"
else
    echo "‚ùå Erreur lors de la compilation"
    echo "   V√©rifiez les d√©pendances et la configuration"
    exit 1
fi
echo ""

# Tests de l'application
echo "7. Tests de l'application..."

if mvn test; then
    echo "‚úÖ Tests r√©ussis"
else
    echo "‚ö†Ô∏è  Tests √©chou√©s, continuation de la migration"
fi
echo ""

# Cr√©ation du package
echo "8. Cr√©ation du package..."

if mvn clean package -DskipTests; then
    echo "‚úÖ Package cr√©√© avec succ√®s"
else
    echo "‚ùå Erreur lors de la cr√©ation du package"
    exit 1
fi
echo ""

# Instructions finales
echo "=== MIGRATION TERMIN√âE ==="
echo ""
echo "üìã R√âSUM√â:"
echo "   ‚Ä¢ Configuration sauvegard√©e: $BACKUP_DIR"
echo "   ‚Ä¢ Fichier .env cr√©√© avec les param√®tres extraits"
echo "   ‚Ä¢ Application Spring Boot compil√©e"
echo "   ‚Ä¢ Ancien cron d√©sactiv√© (si confirm√©)"
echo ""
echo "üîß √âTAPES SUIVANTES:"
echo "   1. Modifiez le fichier .env avec vos vraies valeurs"
echo "   2. Configurez les variables d'environnement:"
echo "      export ORACLE_USERNAME=your-username"
echo "      export ORACLE_PASSWORD=your-password"
echo "      export SMTP_HOST=$SMTP_HOST"
echo "      export SMTP_USERNAME=$SMTP_USERNAME"
echo "      export SMTP_PASSWORD=your-smtp-password"
echo "   3. D√©ployez l'application: ./deploy.sh"
echo "   4. Testez l'application: ./test.sh"
echo ""
echo "üì° ENDPOINTS DISPONIBLES:"
echo "   ‚Ä¢ Sant√©: http://localhost:8080/actuator/health"
echo "   ‚Ä¢ API: http://localhost:8080/api/siop/health"
echo "   ‚Ä¢ G√©n√©ration: POST http://localhost:8080/api/siop/generate"
echo ""
echo "üîç V√âRIFICATIONS:"
echo "   ‚Ä¢ V√©rifiez que l'ancien cron est d√©sactiv√©: crontab -l"
echo "   ‚Ä¢ Testez la nouvelle application: ./test.sh"
echo "   ‚Ä¢ Surveillez les logs: tail -f logs/siop-application.log"
echo ""
echo "‚úÖ Migration termin√©e avec succ√®s!"
echo ""
echo "‚ö†Ô∏è  IMPORTANT:"
echo "   ‚Ä¢ L'ancienne version Bash est sauvegard√©e dans $BACKUP_DIR"
echo "   ‚Ä¢ V√©rifiez que la nouvelle version fonctionne avant de supprimer l'ancienne"
echo "   ‚Ä¢ En cas de probl√®me, vous pouvez restaurer l'ancienne version"
