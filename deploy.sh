#!/bin/bash
# Script de d√©ploiement pour SIOP Spring Boot Application

echo "=== D√©ploiement SIOP Spring Boot Application ==="
echo ""

# Configuration
APP_NAME="siop-spring-boot"
JAR_FILE="target/siop-spring-boot-1.0.0.jar"
PROFILE="prod"
PORT="8080"

# V√©rification des pr√©requis
echo "1. V√©rification des pr√©requis..."

# V√©rification de Java
if ! command -v java &> /dev/null; then
    echo "‚ùå Java non install√©"
    exit 1
fi

# V√©rification de Maven
if ! command -v mvn &> /dev/null; then
    echo "‚ùå Maven non install√©"
    exit 1
fi

echo "‚úÖ Pr√©requis satisfaits"
echo ""

# Compilation
echo "2. Compilation de l'application..."
if mvn clean compile; then
    echo "‚úÖ Compilation r√©ussie"
else
    echo "‚ùå Erreur lors de la compilation"
    exit 1
fi
echo ""

# Tests
echo "3. Ex√©cution des tests..."
if mvn test; then
    echo "‚úÖ Tests r√©ussis"
else
    echo "‚ö†Ô∏è  Tests √©chou√©s, continuation du d√©ploiement"
fi
echo ""

# Package
echo "4. Cr√©ation du package..."
if mvn clean package -DskipTests; then
    echo "‚úÖ Package cr√©√© avec succ√®s"
else
    echo "‚ùå Erreur lors de la cr√©ation du package"
    exit 1
fi
echo ""

# V√©rification du JAR
if [[ ! -f "$JAR_FILE" ]]; then
    echo "‚ùå Fichier JAR non trouv√©: $JAR_FILE"
    exit 1
fi

echo "‚úÖ Fichier JAR trouv√©: $JAR_FILE"
echo ""

# Configuration des variables d'environnement
echo "5. Configuration des variables d'environnement..."

# V√©rification des variables requises
REQUIRED_VARS=("ORACLE_USERNAME" "ORACLE_PASSWORD" "SMTP_HOST" "SMTP_USERNAME" "SMTP_PASSWORD")
MISSING_VARS=()

for var in "${REQUIRED_VARS[@]}"; do
    if [[ -z "${!var}" ]]; then
        MISSING_VARS+=("$var")
    fi
done

if [[ ${#MISSING_VARS[@]} -gt 0 ]]; then
    echo "‚ö†Ô∏è  Variables d'environnement manquantes:"
    for var in "${MISSING_VARS[@]}"; do
        echo "   - $var"
    done
    echo ""
    echo "Configuration par d√©faut utilis√©e (√† modifier dans application.yml)"
fi

echo "‚úÖ Configuration termin√©e"
echo ""

# Arr√™t de l'ancienne version
echo "6. Arr√™t de l'ancienne version..."
if pgrep -f "$APP_NAME" > /dev/null; then
    echo "   Arr√™t de l'ancienne version..."
    pkill -f "$APP_NAME"
    sleep 5
    echo "‚úÖ Ancienne version arr√™t√©e"
else
    echo "   Aucune ancienne version trouv√©e"
fi
echo ""

# D√©marrage de la nouvelle version
echo "7. D√©marrage de la nouvelle version..."

# Cr√©ation du r√©pertoire de logs
mkdir -p logs

# D√©marrage en arri√®re-plan
nohup java -jar "$JAR_FILE" --spring.profiles.active="$PROFILE" > logs/siop-application.log 2>&1 &
APP_PID=$!

echo "   Application d√©marr√©e avec PID: $APP_PID"
echo "   Port: $PORT"
echo "   Profil: $PROFILE"
echo "   Logs: logs/siop-application.log"
echo ""

# Attente du d√©marrage
echo "8. Attente du d√©marrage..."
sleep 10

# V√©rification du statut
echo "9. V√©rification du statut..."

# Test de l'endpoint de sant√©
for i in {1..30}; do
    if curl -s http://localhost:$PORT/actuator/health > /dev/null 2>&1; then
        echo "‚úÖ Application d√©marr√©e avec succ√®s"
        break
    else
        echo "   Tentative $i/30..."
        sleep 2
    fi
    
    if [[ $i -eq 30 ]]; then
        echo "‚ùå Application non accessible apr√®s 60 secondes"
        echo "   V√©rifiez les logs: tail -f logs/siop-application.log"
        exit 1
    fi
done

echo ""

# Affichage des informations
echo "=== D√âPLOIEMENT TERMIN√â ==="
echo ""
echo "üìã INFORMATIONS:"
echo "   ‚Ä¢ Application: $APP_NAME"
echo "   ‚Ä¢ PID: $APP_PID"
echo "   ‚Ä¢ Port: $PORT"
echo "   ‚Ä¢ Profil: $PROFILE"
echo "   ‚Ä¢ Logs: logs/siop-application.log"
echo ""
echo "üîß COMMANDES UTILES:"
echo "   ‚Ä¢ V√©rifier l'√©tat: curl http://localhost:$PORT/actuator/health"
echo "   ‚Ä¢ Voir les logs: tail -f logs/siop-application.log"
echo "   ‚Ä¢ Arr√™ter: kill $APP_PID"
echo "   ‚Ä¢ Red√©marrer: ./deploy.sh"
echo ""
echo "üì° ENDPOINTS API:"
echo "   ‚Ä¢ Sant√©: http://localhost:$PORT/actuator/health"
echo "   ‚Ä¢ G√©n√©ration: POST http://localhost:$PORT/api/siop/generate"
echo "   ‚Ä¢ Test: GET http://localhost:$PORT/api/siop/test-connection"
echo ""
echo "‚úÖ D√©ploiement termin√© avec succ√®s!"
